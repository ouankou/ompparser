//******************************************************************************************************************//
// Copyright (c) 2018-2019, High Performance Computing Architecture and System
// research laboratory at University of North Carolina at Charlotte (HPCAS@UNCC)
// and Lawrence Livermore National Security, LLC.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//*****************************************************************************************************************//

//For testing purpose, there are several extra empty lines.
//The final version should only contain necessary information.
//This is not a C/C++ code, so there's no required writing style.
//Only two kinds of special lines will be recognized.
//One is starting with "omp", which is the input.
//The other one is starting with "PASS: ", which is the result for validation.

#pragma omp taskwait depend(iterator(int bba=4:120:2, b=1:220:3, int c=2:57:9),in:m, n)
PASS: #pragma omp taskwait depend (iterator ( int bba=4:120:2, b=1:220:3, int c=2:57:9 ), in : m, n)

#pragma omp taskwait depend(iterator(int t2=4:120:2, y2=1:220:3, int u2=2:57:9),in:m, n)
PASS: #pragma omp taskwait depend (iterator ( int t2=4:120:2, y2=1:220:3, int u2=2:57:9 ), in : m, n)

#pragma omp taskwait depend(iterator(int t3=4:120:2, y3=1:220:3, int u3=2:57:9),inout:m, n) depend(iterator(int t4=4:120:2, y4=1:220:3, int u4=2:57:9),out:m, n)
PASS: #pragma omp taskwait depend (iterator ( int t3=4:120:2, y3=1:220:3, int u3=2:57:9 ), inout : m, n) depend (iterator ( int t4=4:120:2, y4=1:220:3, int u4=2:57:9 ), out : m, n)
