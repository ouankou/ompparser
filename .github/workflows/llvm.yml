name: LLVM CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04]
        llvm: ['6.0', 7, 8, 9, 10]

    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/bin/clang-${{ matrix.llvm }}
      CXX: /usr/bin/clang++-${{ matrix.llvm }}

    steps:
    - uses: actions/checkout@v2

    - name: Add LLVM repository key
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

    - name: Add LLVM repository on Ubuntu 18.04
      if: ${{ matrix.os }} == 'ubuntu-18.04' && ${{ matrix.os }} != '6.0'
      run: |
        sudo add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${{ matrix.llvm }} main'

    - name: Add LLVM repository on Ubuntu 16.04
      if: ${{ matrix.os }} == 'ubuntu-16.04' && ${{ matrix.os }} != '6.0'
      run: |
        sudo add-apt-repository -y 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-${{ matrix.llvm }} main'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bison \
          build-essential \
          cmake \
          flex \
          clang-${{ matrix.llvm }}

    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/
        mkdir build
        cd build
        bison -v ../src/ompparser.yy && ! cat ompparser.output | grep conflict
        cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON ..
        make

    - name: Test
      run: |
        cd $GITHUB_WORKSPACE/build
        ! ../test_folder.sh ../tests | grep FAILED | grep [1-9]
